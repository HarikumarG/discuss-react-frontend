{"version":3,"sources":["services/history.js","services/auth-user.js","login/Login.js","register/Register.js","home-top-pane/HomeTopPane.js","discussion-list/DiscussionList.js","create-discussion/CreateDiscussion.js","discussion/Discussion.js","router.js","app/App.js","index.js"],"names":["history","createBrowserHistory","authUser","user_id","undefined","user_name","email_id","jwt_token","setAuthenticatedUser","clearAuthenticatedUser","Login","props","state","emailId","password","VerifiedUser","push","className","value","this","onChange","event","setState","target","placeholder","type","onClick","onLogin","bind","to","userDetails","JSON","parse","stringify","loginValid","sendLoginRequest","alert","test","fetch","process","method","headers","Headers","body","then","res","json","response","STATUS","userInfo","DATA","_id","JWT_TOKEN","setAuthUser","window","location","reload","catch","error","console","log","token","Component","Register","userName","onRegister","registerValid","sendRegisterRequest","HomeTopPane","userAuthenticated","hideCreateDiscussion","onLogout","request","DiscussionList","discussionsData","sendGetDiscussionsListRequest","style","maxHeight","overflowY","map","row","topic_name","topic_created_time","data","i","length","Date","toLocaleString","dateStyle","timeStyle","CreateDiscussion","description","goBack","id","rows","onCreateDiscussion","topicData","createDiscussionValid","sendCreateDiscussionRequest","Discussion","discussionData","replyData","replyValue","topic_id","match","params","sendGetDiscussionRequest","reply","reply_content","reply_created_time","onCreateReply","topic_data","reply_data","createReply","sendCreateReplyRequest","url","componentDidMount","routes","exact","path","render","component","App","require","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71a13315.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","let authUser = {\r\n    user_id: undefined,\r\n    user_name: undefined,\r\n    email_id: undefined,\r\n    jwt_token: undefined\r\n};\r\n\r\nfunction setAuthenticatedUser(user_id, user_name, email_id, jwt_token) {\r\n    authUser.user_id = user_id;\r\n    authUser.user_name = user_name;\r\n    authUser.email_id = email_id;\r\n    authUser.jwt_token = jwt_token;\r\n}\r\n\r\nfunction clearAuthenticatedUser() {\r\n    authUser.user_id = undefined;\r\n    authUser.user_name = undefined;\r\n    authUser.email_id = undefined;\r\n    authUser.jwt_token = undefined;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {setAuthenticatedUser, clearAuthenticatedUser, authUser};","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../services/history\";\r\nimport VerifiedUser from \"../services/auth-user\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emailId: '',\r\n            password: '',\r\n        };\r\n        if(VerifiedUser.authUser.user_id) {\r\n            history.push(\"/discussions-list/discussions\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Login Discuss Forum</h5>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-group\">\r\n                                <input value={this.state.emailId} onChange={(event) => this.setState({emailId: event.target.value})} className=\"form-control\" placeholder=\"Enter Email\"></input> <br/>\r\n                                <input value={this.state.password} onChange={(event) => this.setState({password: event.target.value})} className=\"form-control\" type=\"password\" placeholder=\"Enter Password\"></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer modal-footer-button-center\">\r\n                            <button type=\"button\" className=\"btn btn-primary width-200\" onClick={this.onLogin.bind(this)}>Sign In</button>\r\n                        </div>\r\n                        <div className=\"mb-10 align-center\">\r\n                            <Link to=\"/accounts/signup\" className=\"link-to\">Create an Account?</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onLogin() {\r\n        let userDetails = JSON.parse(JSON.stringify(this.state));\r\n        let isValid = this.loginValid(userDetails);\r\n        if(isValid) {\r\n            this.sendLoginRequest(userDetails);\r\n        } else {\r\n            alert(\"The Fields cannot be empty\");\r\n        }\r\n    }\r\n\r\n    loginValid(userDetails) {\r\n        if(!userDetails) {\r\n            return false;\r\n        }\r\n        if(!userDetails.emailId || /^\\s*$/.test(userDetails.emailId)) {\r\n            return false;\r\n        }\r\n        if(!userDetails.password || /^\\s*$/.test(userDetails.password)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    sendLoginRequest(userDetails) {\r\n        const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/accounts/signin\";\r\n        fetch(url, {\r\n            method: 'post',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            body: JSON.stringify({\r\n                \"email_id\": userDetails.emailId,\r\n                \"password\": userDetails.password\r\n            }) \r\n        }).then(res => res.json()).then((response) => {\r\n            if(response.STATUS === \"LOGIN SUCCESSFUL\") {\r\n                let userInfo = response.DATA;\r\n                if(userInfo && userInfo._id && userInfo.user_name && userInfo.email_id && response.JWT_TOKEN) {\r\n                    this.setAuthUser(userInfo,response.JWT_TOKEN);\r\n                    history.push(\"/discussions-list/discussions\");\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            } else if(response.STATUS === \"UNAUTHORIZED\") {\r\n                alert(\"Incorrect Credentials\");\r\n                window.location.reload();\r\n            } else {\r\n                alert(\"Something went wrong! Kindly try again\");\r\n                window.location.reload();\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            alert(\"Something went wrong! Kindly try again\");\r\n        });\r\n    }\r\n\r\n    setAuthUser(userInfo, token) {\r\n        VerifiedUser.setAuthenticatedUser(userInfo._id, userInfo.user_name, userInfo.email_id, token);\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport history from \"../services/history\";\r\nimport VerifiedUser from \"../services/auth-user\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            emailId: '',\r\n            password: '',\r\n        };\r\n        if(VerifiedUser.authUser.user_id) {\r\n            history.push(\"/discussions-list/discussions\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Register Discuss Forum</h5>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-group\">\r\n                                <input value={this.state.userName} onChange={(event) => this.setState({userName: event.target.value})} className=\"form-control\" placeholder=\"Enter User Name\"></input> <br/>\r\n                                <input value={this.state.emailId} onChange={(event) => this.setState({emailId: event.target.value})} className=\"form-control\" placeholder=\"Enter Email\"></input> <br/>\r\n                                <input value={this.state.password} onChange={(event) => this.setState({password: event.target.value})} className=\"form-control\" type=\"password\" placeholder=\"Enter Password\"></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer modal-footer-button-center\">\r\n                            <button type=\"button\" className=\"btn btn-primary width-200\" onClick={this.onRegister.bind(this)}>Sign Up</button>\r\n                        </div>\r\n                        <div className=\"mb-10 align-center\">\r\n                            <Link to=\"/accounts/signin\" className=\"link-to\">Already have an Account?</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onRegister() {\r\n        let userDetails = JSON.parse(JSON.stringify(this.state));\r\n        let isValid = this.registerValid(userDetails);\r\n        if(isValid) {\r\n            this.sendRegisterRequest(userDetails);\r\n        } else {\r\n            alert(\"The Fields cannot be empty\");\r\n        }\r\n    }\r\n\r\n    registerValid(userDetails) {\r\n        if(!userDetails) {\r\n            return false;\r\n        }\r\n        if(!userDetails.userName || /^\\s*$/.test(userDetails.userName)) {\r\n            return false;\r\n        }\r\n        if(!userDetails.emailId || /^\\s*$/.test(userDetails.emailId)) {\r\n            return false;\r\n        }\r\n        if(!userDetails.password || /^\\s*$/.test(userDetails.password)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    sendRegisterRequest(userDetails) {\r\n        const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/accounts/signup\";\r\n        fetch(url, {\r\n            method: 'post',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            body: JSON.stringify({\r\n                \"user_name\": userDetails.userName,\r\n                \"email_id\": userDetails.emailId,\r\n                \"password\": userDetails.password\r\n            }) \r\n        }).then(res => res.json()).then((response) => {\r\n            if(response.STATUS === \"REGISTRATION SUCCESSFUL\") {\r\n                history.push(\"/accounts/signin\");\r\n            } else if (response.STATUS === \"ACCOUNT ALREADY EXISTS\") {\r\n                alert(\"Account already exists!\");\r\n                window.location.reload();\r\n            } else {\r\n                alert(\"Something went wrong! Kindly try again\");\r\n                window.location.reload();\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            alert(\"Something went wrong! Kindly try again\");\r\n        });\r\n    }\r\n}\r\n\r\nexport default Register;","import { Component } from \"react\";\r\nimport history from \"../services/history\";\r\nimport VerifiedUser from \"../services/auth-user\";\r\n\r\nclass HomeTopPane extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userAuthenticated: (VerifiedUser.authUser.user_id ? true : false),\r\n            hideCreateDiscussion: props.hideCreateDiscussion\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-light bg-light justify-content-between\">\r\n                {/* eslint-disable-next-line */}\r\n                <a className=\"navbar-brand\"><strong>Discussion Forum</strong></a>\r\n                <div className=\"form-inline\">\r\n                    {this.state.userAuthenticated && !this.state.hideCreateDiscussion &&\r\n                        <button className=\"btn btn-outline-primary my-2 my-sm-0 mr-10\" onClick={() => history.push(\"/discussions-list/discussions/create-discussion\")}>Create Discussion</button>\r\n                    }\r\n                    {this.state.userAuthenticated === true \r\n                        ? <button className=\"btn btn-outline-danger my-2 my-sm-0\" onClick={this.onLogout.bind(this)}>SignOut</button>\r\n                        : <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={() => history.push(\"/accounts/signin\")}>SignIn</button>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    onLogout() {\r\n        if(this.state.userAuthenticated) {\r\n            const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/accounts/signout\";\r\n            let request = {\r\n                method: 'post',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + VerifiedUser.authUser.jwt_token\r\n                }),\r\n                body: JSON.stringify({\r\n                    \"user_id\": VerifiedUser.authUser.user_id\r\n                }) \r\n            };\r\n            fetch(url, request).then(res => res.json()).then((response) => {\r\n                if(response.STATUS === \"LOGOUT SUCCESSFUL\") {\r\n                    VerifiedUser.clearAuthenticatedUser();\r\n                    history.push(\"/accounts/signin\");\r\n                } else if (response.STATUS === \"UNAUTHORIZED\") {\r\n                    alert(\"Kindly Login and Try again\");\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                alert(\"Something went wrong! Kindly try again\");\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomeTopPane;","import { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeTopPane from \"../home-top-pane/HomeTopPane\";\r\n\r\nclass DiscussionList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            discussionsData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.sendGetDiscussionsListRequest();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomeTopPane/>\r\n                <div className=\"container all-discussions\">\r\n                    <hgroup className=\"mb-20\">\r\n                        <h1>All Discussions</h1>\r\n                    </hgroup>\r\n                    <section className=\"col-xs-12 col-sm-6 col-md-12\" style={{maxHeight: \"450px\", overflowY: \"auto\"}}>\r\n                        {\r\n                            this.state.discussionsData.map(row => \r\n                                <article key={row._id} className=\"search-result row\">\r\n                                    <div className=\"col-xs-12 col-sm-12 col-md-7\">\r\n                                        <h3><Link to={`/discussions-list/discussions/${row._id}`} className=\"link\">{row.topic_name}</Link></h3>\r\n                                        <small className=\"text-muted\">Created By: {row.user_id.user_name}</small> <br/>\r\n                                        <small className=\"text-muted\">Created Time: {row.topic_created_time}</small>\r\n                                    </div>\r\n                                </article>\r\n                            )\r\n                        }\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sendGetDiscussionsListRequest() {\r\n        const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/discussions-list/discussions\";\r\n        fetch(url, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }).then(res => res.json()).then((response) => {\r\n            if(response.STATUS === \"SUCCESS\") {\r\n                let data = response.DATA;\r\n                if(data) {\r\n                    for(var i = 0; i < data.length; i++) {\r\n                        data[i].topic_created_time = new Date(data[i].topic_created_time).toLocaleString(\"en-US\",{\r\n                            dateStyle: \"medium\",\r\n                            timeStyle: \"short\"\r\n                        });\r\n                    }\r\n                    this.setState({discussionsData: data});\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            } else {\r\n                alert(\"Something went wrong! Kindly try again\");\r\n                window.location.reload();\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            alert(\"Something went wrong! Kindly try again\");\r\n        });\r\n    }\r\n}\r\n\r\nexport default DiscussionList;","import { Component } from \"react\";\r\nimport HomeTopPane from \"../home-top-pane/HomeTopPane\";\r\nimport history from \"../services/history\";\r\nimport VerifiedUser from \"../services/auth-user\";\r\n\r\nclass CreateDiscussion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            topic_name: '',\r\n            description: ''\r\n        }\r\n        if(VerifiedUser.authUser.user_id === undefined) {\r\n            history.push(\"/accounts/signin\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomeTopPane hideCreateDiscussion={true}/>\r\n                <div className=\"container\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h4>Create Discussion</h4>\r\n                                <button type=\"button\" className=\"btn btn-light\" onClick={() => history.goBack()}> Back </button>\r\n                            </div>\r\n                            <div className=\"modal-body chat-body\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"md-form\">\r\n                                        <label>Topic: </label>\r\n                                        <textarea id=\"create-discussion-title\" value={this.state.topic_name} onChange={(event) => this.setState({topic_name: event.target.value})} className=\"md-textarea form-control\" rows=\"1\"></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group mt-10\">\r\n                                        <label>Description:</label>\r\n                                        <textarea className=\"form-control\" id=\"create-discussion-description\" onChange={(event) => this.setState({description: event.target.value})} value={this.state.description} rows=\"10\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <div className=\"input-group justify-space-even\">\r\n                                    <span className=\"input-group-btn\">\r\n                                        <button type=\"button\" className=\"btn btn-primary width-200\" onClick={this.onCreateDiscussion.bind(this)}> Create </button>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onCreateDiscussion() {\r\n        let topicData = JSON.parse(JSON.stringify(this.state));\r\n        let isValid = this.createDiscussionValid(topicData);\r\n        if(isValid) {\r\n            this.sendCreateDiscussionRequest(topicData.topic_name, topicData.description);\r\n        } else {\r\n            alert(\"The Fields cannot be empty\");\r\n        }\r\n    }\r\n\r\n    createDiscussionValid(topicData) {\r\n        if(!topicData) {\r\n            return false;\r\n        }\r\n        if(!topicData.topic_name || /^\\s*$/.test(topicData.topic_name)) {\r\n            return false;\r\n        }\r\n        if(!topicData.description || /^\\s*$/.test(topicData.description)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    sendCreateDiscussionRequest(topic_name, description) {\r\n        if(VerifiedUser.authUser.user_id) {\r\n            const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/discussions-list/create-discussion\";\r\n            let request = {\r\n                method: 'post',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + VerifiedUser.authUser.jwt_token\r\n                }),\r\n                body: JSON.stringify({\r\n                    \"user_id\": VerifiedUser.authUser.user_id,\r\n                    \"topic_name\": topic_name,\r\n                    \"description\": description\r\n                }) \r\n            };\r\n            fetch(url, request).then(res => res.json()).then((response) => {\r\n                if(response.STATUS === \"SUCCESS\") {\r\n                    history.push(\"/discussions-list/discussions\");\r\n                } else if (response.STATUS === \"UNAUTHORIZED\") {\r\n                    alert(\"Kindly Login and Try again\");\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                alert(\"Something went wrong! Kindly try again\");\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default CreateDiscussion;","import { Component } from \"react\";\r\nimport HomeTopPane from \"../home-top-pane/HomeTopPane\";\r\nimport VerifiedUser from \"../services/auth-user\";\r\nimport history from \"../services/history\";\r\n\r\nclass Discussion extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            discussionData: {},\r\n            replyData: [],\r\n            userAuthenticated: (VerifiedUser.authUser.user_id ? true : false),\r\n            replyValue: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {match: {params}} = this.props;\r\n        let topic_id = params.topic_id;\r\n        this.sendGetDiscussionRequest(topic_id);\r\n        this.setState({topic_id: topic_id});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomeTopPane />\r\n                <div className=\"container all-discussions\">\r\n                {\r\n                    this.state.discussionData.user_id && this.state.replyData &&\r\n                    <div>\r\n                        <hgroup className=\"mb-20\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <h1>Discussion</h1>\r\n                                <button className=\"btn btn-primary\" onClick={()=> history.push(\"/discussions-list/discussions\")}>View All Discussions</button>\r\n                            </div>\r\n                            <small className=\"text-muted\">Created By: {this.state.discussionData.user_id.user_name}</small> <br/>\r\n                            <small className=\"text-muted\">Created Time: {this.state.discussionData.topic_created_time}</small>\r\n                        </hgroup>\r\n\r\n                        <section className=\"col-xs-12 col-sm-6 col-md-12\">\r\n                            <article className=\"search-result row\">\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-7\">\r\n                                    {/* eslint-disable-next-line */}\r\n                                    <h3><a>{this.state.discussionData.topic_name}</a></h3>\r\n                                    <p>{this.state.discussionData.description}</p>\r\n                                </div>\r\n                            </article>\r\n                            <small className=\"text-muter\"><strong>Comments:</strong></small>\r\n                            {\r\n                                this.state.replyData.length > 0\r\n                                ?   <div className=\"reply-content\" style={{maxHeight: \"200px\", overflowY: \"auto\"}}>\r\n                                        {\r\n                                            this.state.replyData.map(reply => \r\n                                                <div key={reply._id}>\r\n                                                    <div id=\"reply-id\">{reply.reply_content}</div>\r\n                                                    <small className=\"text-muted\">Created By: {reply.user_id.user_name}</small> <br/>\r\n                                                    <small className=\"text-muted\">Created Time: {reply.reply_created_time}</small>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                :   <div>\r\n                                        <small className=\"text-muted\">No Comments Yet</small>\r\n                                    </div>   \r\n                            }\r\n                            {\r\n                                this.state.userAuthenticated && \r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" value={this.state.replyValue} onChange={(event) => this.setState({replyValue: event.target.value})} className=\"form-control input-sm\" placeholder=\"your reply here...\"></input>\r\n                                    <span className=\"input-group-btn\">\r\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onCreateReply.bind(this)}>\r\n                                        reply\r\n                                        </button>\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sendGetDiscussionRequest(topic_id) {\r\n        const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/discussions-list/discussions/\"+topic_id;\r\n        fetch(url, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }).then(res => res.json()).then((response) => {\r\n            if(response.STATUS === \"SUCCESS\") {\r\n                let data = response.DATA;\r\n                if(data && data.topic_data && data.reply_data) {\r\n                    data.topic_data.topic_created_time = new Date(data.topic_data.topic_created_time).toLocaleString(\"en-US\",{\r\n                        dateStyle: \"medium\",\r\n                        timeStyle: \"short\"\r\n                    });\r\n                    for(var i = 0; i < data.reply_data.length; i++) {\r\n                        data.reply_data[i].reply_created_time = new Date(data.reply_data[i].reply_created_time).toLocaleString(\"en-US\",{\r\n                            dateStyle: \"medium\",\r\n                            timeStyle: \"short\"\r\n                        });\r\n                    }\r\n                    this.setState({\r\n                        discussionData: data.topic_data,\r\n                        replyData: data.reply_data\r\n                    });\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            } else {\r\n                alert(\"Something went wrong! Kindly try again\");\r\n                window.location.reload();\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            alert(\"Something went wrong! Kindly try again\");\r\n        });\r\n    }\r\n\r\n    onCreateReply() {\r\n        if(this.state.replyValue && !/^\\s*$/.test(this.state.replyValue)) {\r\n            let createReply = JSON.parse(JSON.stringify(this.state));\r\n            this.sendCreateReplyRequest(createReply);\r\n            this.setState({replyValue: ''});\r\n        }\r\n    }\r\n\r\n    sendCreateReplyRequest(createReply) {\r\n        if(this.state.userAuthenticated) {\r\n            const url = process.env.REACT_APP_BACKEND_ENDPOINT+\"/discussions-list/discussions/\"+createReply.topic_id+\"/create-reply\";\r\n            let request = {\r\n                method: 'post',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + VerifiedUser.authUser.jwt_token\r\n                }),\r\n                body: JSON.stringify({\r\n                    \"user_id\": VerifiedUser.authUser.user_id,\r\n                    \"reply_content\": createReply.replyValue\r\n                }) \r\n            };\r\n            fetch(url, request).then(res => res.json()).then((response) => {\r\n                if(response.STATUS === \"SUCCESS\") {\r\n                    this.componentDidMount();\r\n                } else if (response.STATUS === \"UNAUTHORIZED\") {\r\n                    alert(\"Kindly Login and Try again\");\r\n                    window.location.reload();\r\n                } else {\r\n                    alert(\"Something went wrong! Kindly try again\");\r\n                    window.location.reload();\r\n                }\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                alert(\"Something went wrong! Kindly try again\");\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Discussion;","import { Router, Switch, Route} from 'react-router-dom';\r\nimport Login from './login/Login';\r\nimport Register from './register/Register';\r\nimport DiscussionList from './discussion-list/DiscussionList';\r\nimport CreateDiscussion from './create-discussion/CreateDiscussion';\r\nimport history from './services/history';\r\nimport Discussion from './discussion/Discussion';\r\n\r\nconst routes = () =>  (\r\n                <Router history={history}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={() => history.push(\"/accounts/signin\")} />\r\n                        <Route exact path=\"/accounts/signin\" component={Login} />\r\n                        <Route exact path=\"/accounts/signup\" component={Register} />\r\n                        <Route exact path=\"/discussions-list/discussions\" component={DiscussionList} />\r\n                        <Route exact path=\"/discussions-list/discussions/create-discussion\" component={CreateDiscussion} />\r\n                        <Route exact path=\"/discussions-list/discussions/:topic_id\" component={Discussion} />\r\n                    </Switch>\r\n                </Router>\r\n        )\r\n\r\nexport default routes;","import Routes from '../router';\r\nconst { Component } = require(\"react\");\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Routes />\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './app/App';\r\nrequire('./index.css');\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));  "],"sourceRoot":""}